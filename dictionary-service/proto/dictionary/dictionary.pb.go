// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dictionary/dictionary.proto

package go_micro_srv_dictionary

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Word struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Word                 string   `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
	Definition           string   `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
	Pronounciation       string   `protobuf:"bytes,4,opt,name=pronounciation,proto3" json:"pronounciation,omitempty"`
	Appearances          int32    `protobuf:"varint,5,opt,name=appearances,proto3" json:"appearances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_dictionary_65f3e1e60f128472, []int{0}
}
func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (dst *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(dst, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Word) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *Word) GetDefinition() string {
	if m != nil {
		return m.Definition
	}
	return ""
}

func (m *Word) GetPronounciation() string {
	if m != nil {
		return m.Pronounciation
	}
	return ""
}

func (m *Word) GetAppearances() int32 {
	if m != nil {
		return m.Appearances
	}
	return 0
}

type GetRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=Query,proto3" json:"Query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dictionary_65f3e1e60f128472, []int{1}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type Response struct {
	Word                 *Word    `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Words                []*Word  `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_dictionary_65f3e1e60f128472, []int{2}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetWord() *Word {
	if m != nil {
		return m.Word
	}
	return nil
}

func (m *Response) GetWords() []*Word {
	if m != nil {
		return m.Words
	}
	return nil
}

func init() {
	proto.RegisterType((*Word)(nil), "go.micro.srv.dictionary.Word")
	proto.RegisterType((*GetRequest)(nil), "go.micro.srv.dictionary.GetRequest")
	proto.RegisterType((*Response)(nil), "go.micro.srv.dictionary.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for DictionaryService service

type DictionaryServiceClient interface {
	GetWords(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error)
	GetWord(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error)
	Search(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error)
}

type dictionaryServiceClient struct {
	c           client.Client
	serviceName string
}

func NewDictionaryServiceClient(serviceName string, c client.Client) DictionaryServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.dictionary"
	}
	return &dictionaryServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *dictionaryServiceClient) GetWords(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "DictionaryService.GetWords", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dictionaryServiceClient) GetWord(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "DictionaryService.GetWord", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dictionaryServiceClient) Search(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "DictionaryService.Search", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DictionaryService service

type DictionaryServiceHandler interface {
	GetWords(context.Context, *GetRequest, *Response) error
	GetWord(context.Context, *GetRequest, *Response) error
	Search(context.Context, *GetRequest, *Response) error
}

func RegisterDictionaryServiceHandler(s server.Server, hdlr DictionaryServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&DictionaryService{hdlr}, opts...))
}

type DictionaryService struct {
	DictionaryServiceHandler
}

func (h *DictionaryService) GetWords(ctx context.Context, in *GetRequest, out *Response) error {
	return h.DictionaryServiceHandler.GetWords(ctx, in, out)
}

func (h *DictionaryService) GetWord(ctx context.Context, in *GetRequest, out *Response) error {
	return h.DictionaryServiceHandler.GetWord(ctx, in, out)
}

func (h *DictionaryService) Search(ctx context.Context, in *GetRequest, out *Response) error {
	return h.DictionaryServiceHandler.Search(ctx, in, out)
}

func init() {
	proto.RegisterFile("dictionary/dictionary.proto", fileDescriptor_dictionary_65f3e1e60f128472)
}

var fileDescriptor_dictionary_65f3e1e60f128472 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xff, 0x49, 0x9b, 0xfe, 0xeb, 0x14, 0x0a, 0x0e, 0x82, 0x41, 0x51, 0x62, 0x04, 0xe9,
	0x69, 0xc5, 0xf6, 0x2b, 0x08, 0x3d, 0x9b, 0x0a, 0x9e, 0xd7, 0xdd, 0x51, 0xf7, 0xe0, 0x6e, 0x9c,
	0x4d, 0x2a, 0xfd, 0x1a, 0xe2, 0x07, 0x96, 0x6c, 0xa3, 0x29, 0x42, 0xf0, 0xd2, 0x53, 0x26, 0xef,
	0xfd, 0xe6, 0x31, 0x0f, 0x16, 0x4e, 0xb5, 0x51, 0x95, 0x71, 0x56, 0xf2, 0xe6, 0xba, 0x1b, 0x45,
	0xc9, 0xae, 0x72, 0x78, 0xfc, 0xec, 0xc4, 0xab, 0x51, 0xec, 0x84, 0xe7, 0xb5, 0xe8, 0xec, 0xfc,
	0x33, 0x82, 0xe1, 0x83, 0x63, 0x8d, 0x53, 0x88, 0x8d, 0x4e, 0xa3, 0x2c, 0x9a, 0x1d, 0x14, 0xb1,
	0xd1, 0x88, 0x30, 0x7c, 0x77, 0xac, 0xd3, 0x38, 0x28, 0x61, 0xc6, 0x73, 0x00, 0x4d, 0x4f, 0xc6,
	0x9a, 0x66, 0x3b, 0x1d, 0x04, 0x67, 0x47, 0xc1, 0x2b, 0x98, 0x96, 0xec, 0xac, 0xab, 0xad, 0x32,
	0x32, 0x30, 0xc3, 0xc0, 0xfc, 0x52, 0x31, 0x83, 0x89, 0x2c, 0x4b, 0x92, 0x2c, 0xad, 0x22, 0x9f,
	0x26, 0x59, 0x34, 0x4b, 0x8a, 0x5d, 0x29, 0xcf, 0x01, 0x96, 0x54, 0x15, 0xf4, 0x56, 0x93, 0xaf,
	0xf0, 0x08, 0x92, 0xbb, 0x9a, 0x78, 0xd3, 0x9e, 0xb7, 0xfd, 0xc9, 0x19, 0xc6, 0x05, 0xf9, 0xd2,
	0x59, 0x4f, 0x78, 0xd3, 0x5e, 0xdb, 0x00, 0x93, 0xf9, 0x99, 0xe8, 0xa9, 0x2b, 0x9a, 0xaa, 0x6d,
	0x99, 0x05, 0x24, 0xcd, 0xd7, 0xa7, 0x71, 0x36, 0xf8, 0x7b, 0x67, 0xcb, 0xce, 0x3f, 0x62, 0x38,
	0xbc, 0xfd, 0xb1, 0x56, 0xc4, 0x6b, 0xa3, 0x08, 0xef, 0x61, 0xbc, 0xa4, 0xaa, 0xe1, 0x3c, 0x5e,
	0xf6, 0xe6, 0x74, 0x85, 0x4e, 0x2e, 0x7a, 0xa1, 0xef, 0x46, 0xf9, 0x3f, 0x5c, 0xc1, 0xff, 0x36,
	0x75, 0x8f, 0xa1, 0x05, 0x8c, 0x56, 0x24, 0x59, 0xbd, 0xec, 0x2f, 0xf3, 0x71, 0x14, 0xde, 0xd8,
	0xe2, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xfa, 0x40, 0xce, 0x82, 0x02, 0x00, 0x00,
}
